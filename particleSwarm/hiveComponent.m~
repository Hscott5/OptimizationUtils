function vecs = hiveComponent(history, optimizeFor)
% a function to determine how to exploit the optimization space for
% particle swarm. used as a replacement of the global best
% weighted vector average for the difference between the current point and
% all other points that have better responses
parseHistory(history);
currentPoints = history.stim{end};
currentResponses = history.response{end};
responses = cat(2,history.response{end-3:end});
allPoints = cat(2,history.stim{end-3:end});
norms = sqrt(sum(responses.^2,1));
switch optimizeFor
    case 'norm'
for p = 1:nParticles
    betterFilt = norms>sqrt(sum(currentResponses(:,p).^2,1));
    betterPoints = allPoints(:,betterFilt);
    weights = sqrt(sum(responses(:,betterFilt).^2,1))-sqrt(sum(currentResponses(:,p).^2,1));
    weights = weights./sum(weights);
    vecs(:,p) = sum(normc(betterPoints-currentPoints(:,p)).*weights,2);
end

vecs = normc(vecs);